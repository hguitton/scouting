.container.is-fluid data-controller="converter scraper format"
  = form_for @player, wrapper: :test do |f|
    = f.hidden_field :photo,  data: { target: 'scraper.photo' }
    .m-b-md.m-t-lg
      .control
        = f.text_field :links, class: "input", placeholder: "Link", data: { action: 'change->scraper#getInfos' }
    .grid.grid-5
      div
        label.label Name
        = f.text_field :name, class: "input", placeholder: "Name",  data: { target: 'scraper.name' }
      div
        label.label Birthdate 
        = f.text_field :birthdate, class: "input is-format-birthdate", placeholder: "DD-MM-YYYY",  data: { target: 'scraper.birthdate' }
      div
        label.label Nationality
        = f.text_field :nationality, class: "input",  placeholder: "Nationality", data: { controller: 'autocomplete', 'autocomplete-resource': 'countries', target: 'scraper.nationality' }
      div
        label.label Status
        .select
          = f.collection_select :status_id, Status.all, :id, :name, {}, class: 'input'
      div
        label.label Position
        .select
          = f.collection_select :available, Settings.players.available, :to_s, :to_s, {}, class: 'input'
    hr
    .grid.grid-6
      div
        label.label Position
        .select
          = f.collection_select :position_id, Position.order(order: :asc).all, :id, :name, {}, class: 'input', data: { target: 'scraper.position' }
      .field.has-addons
        .control
          = f.number_field :height_eu, class: "input is-format-height", placeholder: "Height", data: { target: 'converter.heightEu scraper.height', action: 'keyup->converter#updateHeightUs' }
        .control
          a.button.is-static.p-none cm
      .field.has-addons
        .control
          = f.text_field :height_us, class: "input is-format-height-us", placeholder: "Height", data: { target: 'converter.heightUs', action: 'keyup->converter#updateHeightEu' }
        .control
          a.button.is-static.p-none ft            
      .field.has-addons
        .control
          = f.number_field :weight_eu, class: "input is-format-weight", placeholder: "Weight", data: { target: 'converter.weightEu scraper.weight', action: 'keyup->converter#updateWeightUs' }
        .control
          a.button.is-static.p-none kg
      .field.has-addons
        .control
          = f.number_field :weight_us, class: "input is-format-weight", placeholder: "Weight", data: { target: 'converter.weightUs', action: 'keyup->converter#updateWeightEu' }
        .control
          a.button.is-static.p-none lbs
      div
        label.label Level
        .select
          = f.collection_select :level_id, Level.all, :id, :name, {selected: Level.find_by(name: ENV['DEFAULT_LEVEL'])&.id}, class: 'input'
    hr
    label.label Profiles
    .grid.grid-6
      = f.collection_check_boxes(:profile_ids, Profile.all, :id, :name) do |b|
        - b.label class:'flex aic'
          = b.check_box
          .p-l-sm.is-size-5
            = b.object.name

    hr
    = f.fields_for :seasons do |season|
      = render 'season_fields', f: season
    .links
      = link_to_add_association 'Add season', f, :seasons, class: "button m-t-sm is-small"
    hr
    .grid.grid-7
      div
        label.label College
        = f.text_field :program, class: "input", placeholder: "College", data: { target: 'scraper.college' }
      div
        label.label Agent US
        = f.text_field :agent_us, class: "input", placeholder: "Agent US", data: { target: 'scraper.agent', controller: 'autocomplete', 'autocomplete-resource': 'agents' }
      div
        label.label Agent FR
        = f.text_field :agent_fr, class: "input", placeholder: "Agent FR", data: { controller: 'autocomplete', 'autocomplete-resource': 'agents' }
      - salaries = Settings.players.salaries.map(&:name)
      .select
          = f.collection_select :salary_estimation, salaries, :to_s, :to_s, {}, class: 'input'
      div
        label.label Salary real (€)
        .field.has-addons
          .control
            = f.number_field :salary_real, class: "input is-format-salary", placeholder: "Real salary", data: { target: 'converter.salaryEuro', action: 'keyup->converter#updateSalaryDollar' }
          .control
            a.button.is-static.p-none k€
      div
        label.label Salary real ($)
        .field.has-addons
          .control
            input.input.is-format-salary type="number" placeholder="Or real salary" data-target='converter.salaryDollar' data-action='keyup->converter#updateSalaryEuro'
          .control
            a.button.is-static.p-none k$
      div
        label.label Priority
        .select
          = f.collection_select :priority_id, Priority.all, :id, :name, {}, class: 'input'    

    hr
    = f.fields_for :socials do |ff|
      = render "social_fields", f: ff
    .links.m-t-sm
      = link_to_add_association 'Add social', f, :socials, class: "button m-t-sm is-small"
    hr
    - if params[:action] == "new"
      = f.fields_for :comments do |ff|
        .nested-fields
          = ff.hidden_field :user_id, value: current_user.id
          = ff.text_area :content, class: "textarea", placeholder: "Comments"
    = f.submit "OK", class: "m-t-md button is-primary is-medium is-fullwidth" 